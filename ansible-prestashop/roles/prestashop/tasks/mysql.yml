---
# roles/prestashop/tasks/mysql.yml

- name: Install MySQL Server
  apt:
    name: mysql-server
    state: present
    update_cache: yes
  become: yes
  tags: mysql

- name: Ensure MySQL service is running
  service:
    name: mysql
    state: started
    enabled: yes
  become: yes
  tags: mysql

- name: Install MySQL Python client
  apt:
    name: python3-pymysql
    state: present
  become: yes
  tags: mysql

- name: Set MySQL root password (only if not already set)
  mysql_user:
    name: root
    host: localhost
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    check_implicit_admin: true
    state: present
  ignore_errors: yes  # This allows idempotency â€” skips if password already set

- name: Remove anonymous MySQL users
  mysql_user:
    name: ''
    host_all: yes
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent

- name: Remove MySQL test database
  mysql_db:
    name: test
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent

- name: Disallow root login remotely
  mysql_user:
    name: root
    host: "{{ item }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent
  loop:
    - "{{ ansible_hostname }}"
    - '%'
  ignore_errors: yes


- name: Create PrestaShop database
  mysql_db:
    name: "{{ prestashop_db_name }}"
    state: present
    encoding: utf8mb4
    collation: utf8mb4_unicode_ci
    login_user: root
    login_password: "{{mysql_root_password}}"
    login_host: localhost

- name: Create PrestaShop DB user
  mysql_user:
    name: "{{ prestashop_db_user }}"
    password: "{{ prestashop_db_password }}"
    priv: "{{ prestashop_db_name }}.*:ALL"
    host: localhost
    state: present
    login_user: root
    login_password: "{{mysql_root_password}}"
